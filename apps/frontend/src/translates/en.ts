import { NotificationType } from '@/service/notificationService';

type Translation = { [key: string]: string | Translation };
export default <Translation>{
    init: {
        startUpdating: 'Start updating.',
        checkExist: 'Checking if an account already exists.',
        startFirstWallet: 'Initializing first wallet creation.',
        walletCreationFailed: 'Wallet creation failed.',
        noDataYet: 'No data yet.',
        isThisFirstTime: 'Is this your first time?',
        loading: 'Loading...',
    },
    notification: {
        successWalletName: 'Successfully Changed Wallet Name Into {name}',
        notPossible: 'Not Possible at This Time',
    },
    walletList: {
        title: 'My wallets',
    },
    walletCard: {
        noBalance: 'No balance found for this wallet',
    },
    walletImport: {
        title: 'Import Wallet',
        tooltip: 'Import Wallet',
        walletName: 'Wallet Name',
        secret: 'Secret',
        addressIndex: 'Address Index',
        CTA: 'Import Wallet',
        advanced: 'Advanced',
    },
    wallet: {
        overview: {
            assets: 'Assets',
            sendCoins: 'Send Coins',
            receiveCoins: 'Receive Coins',
            transferFromStellar: 'Transfer from Stellar',
            noAssetsFound: 'No Assets Found',
            checkVesting: 'Checking vested tokens...',
        },
        transactions: {
            tfchainHistoryBanner: 'Transaction History for TFChain Coming Soon.',
            filterTitle: 'Filter by Currency',
        },
        info: {
            title: 'Wallet Info',
            addressesTitle: 'Addresses',
            secretsTitle: 'Secrets',
            stellarAddress: 'Stellar Address',
            tfChainAddress: 'TFChain Address',
            stellarSecret: 'Stellar Secret',
            tfChainSecret: 'TFChain Secret',
            walletName: 'Wallet Name',
            balance: 'Balance',
            balanceIn: 'Balance in',
            balanceInStellar: 'Balance in Stellar',
            balanceInTFChain: 'Balance in TFChain',
            deleteButton: 'Delete',
        },
    },
    dialog: {
        wallet: {
            changeName: {
                title: 'Change Wallet Name',
                input: 'Please enter the new desired name',
                confirm: 'Change',
                cancel: 'Cancel',
                error: {
                    maximum: 'The maximum length of the name is 50 characters',
                    empty: 'The name cannot be empty',
                    inUse: 'The name is already in use',
                    null: '',
                },
            },
        },
        deleteWalletDialog: {
            title: 'Delete Wallet',
            enterNaem: 'Please enter the name of the wallet you want to delete',
            confirm: 'Delete',
        },
        changeWalletName: {
            title: 'Change Wallet Name',
            input: '',
            confirm: 'Change',
            cancel: 'Cancel',
        },
    },
    transfer: {
        send: {
            title: 'Send',
            chain: 'Chain',
            scanQR: 'Scan QR',
            from: 'From',
            to: 'To',
            amount: 'Amount',
            message: 'Message',
            asset: 'Asset',
            fee: 'Fee',
            sendTokensButton: 'Send Tokens',
        },
        receive: {
            title: 'Receive',
            chain: 'Chain',
            scanQR: 'Scan QR',
            from: 'From',
            to: 'To',
            message: 'Message',
            amount: 'Amount',
            asset: 'Asset',
            fee: 'Fee',
            generateQRButton: 'Generate QR code',
        },
        bridge: {
            title: 'Bridge',
            chain: 'Chain',
            scanQR: 'Scan QR',
            from: 'From',
            to: 'To',
            message: 'Message',
            amount: 'Amount',
            asset: 'Asset',
            fee: 'Fee',
            generateQRButton: 'Generate QR code',
        },
    },
    chain: {
        stellar: 'Stellar',
        substrate: 'TFChain',
    },
    currency: {
        short: {
            all: 'All',
            ALL: 'All',
            xlm: 'XLM',
            XLM: 'XLM',
            btc: 'BTC',
            BTC: 'BTC',
            tft: 'TFT',
            TFT: 'TFT',
        },
        long: {
            xlm: 'Stellar Lumens',
            XLM: 'Stellar Lumens',
            btc: 'Bitcoin',
            BTC: 'Bitcoin',
            tft: 'Threefold Token',
            TFT: 'Threefold Token',
        },
    },
};
